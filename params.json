{
  "name": "Instagram-collection",
  "tagline": "An app that takes a hashtag, start date, and end date, and collects submissions from Instagram.",
  "body": "# instagram-collection\r\n\r\n## Installation\r\n\r\nMake sure to have the latest versions of Node and NPM installed. Run `npm install` in the command line at the root of the project to install all dependencies.\r\n\r\n## Configuration\r\n\r\nMake sure to provide an Instagram API key (http://instagram.pixelunion.net/) and a MongoDB URI in the config.json file for the app to function properly.\r\n\r\n## Running the app\r\n\r\nRun `npm start` in the command line at the root of the project to start a local server. This server will provide an API and a single page app at the [localhost](localhost:5000).\r\n\r\n## API\r\n\r\n### POST - /api/create\r\n\r\nThe `/api/create` endpoint will create a collection and return its database Id.\r\n\r\nIts parameters are:\r\n* `tag` : a valid hashtag in the form of a string, without the # prefix.\r\n* `time_start` : a timestamp in the form of a javascript date.\r\n* `time_end` : a timestamp in the form of a javascript date.\r\n\r\nIt will look for content tagged with the supplied tag between the supplied start and end dates.\r\n\r\n### GET - /api/collections\r\n\r\nThe `/api/collections` endpoint retrieves collections.\r\n\r\nIts parameters are:\r\n* `collection` : a database Id for a collection.\r\n* `limit` : the amount of content to return (default is 50).\r\n* `offset` : the amount of content to skip.\r\n\r\nIf supplied a collection Id, this endpoint will retrieve: a collection, some content (based on the limit and offset params), and some pagination information.\r\n\r\nIf not supplied with a collection Id, this endpoint will return an array of collections without their content.\r\n\r\n## Demo\r\n\r\nCheck out a live demo of the app at http://instagram-collection.herokuapp.com/\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}